// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Profile {
    id            String    @id @db.Uuid // References auth.users(id)
    firstName     String?
    lastName      String?
    fullName      String?
    email         String    @unique
    emailVerified DateTime?
    avatarUrl     String?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt

    // Relations
    videos Video[]
    shorts Short[]
    role   UserRole @default(USER)

    @@map("profiles") // Maps to the "profiles" table in Postgres
}

model Video {
    id           Int      @id @default(autoincrement())
    title        String
    description  String
    videoId      String
    public       Boolean  @default(true)
    url          String
    thumbnailUrl String
    duration     Int
    userId       String   @db.Uuid
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    // Relation to Profile instead of User
    profile Profile @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("videos")
}

model Short {
    id           Int      @id @default(autoincrement())
    title        String
    description  String
    shortId      String
    public       Boolean  @default(true)
    url          String
    thumbnailUrl String
    duration     Int
    userId       String   @db.Uuid
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    // Relation to Profile instead of User
    profile Profile @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("shorts")
}

enum UserRole {
    ADMIN
    USER
}
