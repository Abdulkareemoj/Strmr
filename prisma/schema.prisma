// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    // previewFeatures = ["multiSchema"]
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
    // schemas   = ["auth", "public"]
}

model Profile {
    id        String   @id @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    firstName String?
    lastName  String?
    username  String?
    avatarUrl String?
    bio       String?

    // Relations
    videos Video[]
    shorts Short[]

    @@map("profiles")
}

model Video {
    id           String   @id @default(uuid())
    title        String
    description  String
    videoId      String
    public       Boolean  @default(true)
    url          String
    thumbnailUrl String
    duration     Int
    userId       String // Removed @db.Uuid
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    Profile   Profile? @relation(fields: [profileId], references: [id])
    profileId String?

    @@map("videos")
}

model Short {
    id           String   @id @default(uuid())
    title        String
    description  String
    shortId      String
    public       Boolean  @default(true)
    url          String
    thumbnailUrl String
    duration     Int
    profileId    String // Changed from userId to profileId for clarity
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    // Fixed relation
    profile Profile? @relation(fields: [profileId], references: [id], onDelete: Cascade)

    @@map("shorts")
}

enum UserRole {
    ADMIN
    USER

    // @@schema("public")
}
